import java.sql.Connection;
import java.sql.PreparedStatement; // Añade la importación necesaria
import java.sql.SQLException; // Añade la importación necesaria
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author aeaya
 */
public class EquipoEn extends javax.swing.JFrame {
ConexionDB conSQL = new ConexionDB();
    /**
     * Creates new form EquipoEn
     */
    public EquipoEn() {
        initComponents();
         cargarIDEquipo();
          cargarIDUsuario();
          
          MostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));
        jPanel1.setLayout(null);

        jLabel1.setText("ID DEL EQUIPO");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(37, 80, 110, 40);

        jLabel2.setText("ID DEL USUARIO");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(27, 160, 120, 50);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_USUARIO", "ID_EQUIPO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(510, 30, 350, 402);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(152, 80, 110, 40);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(152, 160, 110, 50);

        jButton1.setText("AÑADIR");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(130, 280, 140, 60);

        jButton2.setText("ELIMINAR");
        jPanel1.add(jButton2);
        jButton2.setBounds(360, 240, 120, 30);

        jButton3.setText("MODIFICAR");
        jPanel1.add(jButton3);
        jButton3.setBounds(360, 290, 120, 30);

        jButton4.setText("Atras");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton4MousePressed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(45, 403, 110, 50);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 890, 590);

        setBounds(0, 0, 897, 595);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        boolean error = false;
    
    // Convertir el objeto seleccionado a String y luego a int
    int idequipo = Integer.parseInt((String) jComboBox1.getSelectedItem());
    int idjugador = Integer.parseInt((String) jComboBox2.getSelectedItem());
    
    try {
        String query = "INSERT INTO Equipo_en (ID_Usuario, ID_Equipo) VALUES(?, ?)";
        PreparedStatement pps = conSQL.prepareStatement(query);
        pps.setInt(1, idjugador);
        pps.setInt(2, idequipo);
  
        pps.executeUpdate();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar los datos en la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        error = true;
    }

    if (!error) {
        JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
    }
    
    MostrarDatos();
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton4MousePressed

    
    private void cargarIDEquipo() {
    try (Connection conSQL = new ConexionDB().getConectarDB();
         Statement stmt = conSQL.createStatement()) {

        // Consulta para obtener los IDs de la tabla Equipos
        String query = "SELECT ID_Equipo FROM equipos";
        ResultSet resultSet = stmt.executeQuery(query);

        // Limpiar el JComboBox antes de agregar nuevos elementos
        jComboBox1.removeAllItems();

        // Agregar los IDs al JComboBox
        while (resultSet.next()) {
            int idEquipo = resultSet.getInt("ID_Equipo");
            jComboBox1.addItem("" + idEquipo);
        }

        // Cerrar recursos
        resultSet.close();

    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}
    
    private void cargarIDUsuario() {
    try (Connection conSQL = new ConexionDB().getConectarDB();
         Statement stmt = conSQL.createStatement()) {

        // Consulta para obtener los IDs de la tabla Equipos
        String query = "SELECT ID_Usuario FROM usuario";
        ResultSet resultSet = stmt.executeQuery(query);

        // Limpiar el JComboBox antes de agregar nuevos elementos
        jComboBox2.removeAllItems();

        // Agregar los IDs al JComboBox
        while (resultSet.next()) {
            int idUsuario = resultSet.getInt("ID_Usuario");
            jComboBox2.addItem("" + idUsuario);
        }

        // Cerrar recursos
        resultSet.close();

    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}
    private void LimpiarTabla(DefaultTableModel model) {
    int rowCount = model.getRowCount();
    for (int i = rowCount - 1; i >= 0; i--) {
        model.removeRow(i);
    }
}
    
    
    private void mostrarDatosEnTabla(JTable tabla, DefaultTableModel modelo, String consultaSQL) {
    LimpiarTabla(modelo);

    try (Connection conSQL = new ConexionDB().getConectarDB();
         Statement stmt = conSQL.createStatement();
         ResultSet result = stmt.executeQuery(consultaSQL)) {

        while (result.next()) {
            int idusuario = result.getInt("ID_Usuario");
            int idequipo = result.getInt("ID_Equipo");
            

            modelo.addRow(new Object[]{idusuario, idequipo});
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al leer los datos desde la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
}
    
    void MostrarDatos() {
      
   DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
      
   String query = "SELECT * FROM Equipo_en"; // Reemplaza esto con tu consulta SQL real

    // Llamada al método para mostrar datos en jTable2
    mostrarDatosEnTabla(jTable1, model, query);
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EquipoEn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EquipoEn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EquipoEn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EquipoEn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EquipoEn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
